#!/usr/bin/perl

use 5.006;
use strict;
use warnings;

use Capture::Tiny qw(capture_stdout);
use Carp;

main();
croak;

## no critic (BuiltinFunctions::ProhibitComplexMappings)
## no critic (RegularExpressions::ProhibitEnumeratedClasses)

sub main {

    # read policies from RepositoryBase.pm
    open my $fh, q{<}, 'lib/Dist/Zilla/Plugin/Author/SKIRMESS/RepositoryBase.pm' or croak "Cannot read file: $!";
    my @policies_lines_from_module = grep { m{ ^ (:?[#] \s* )? [[] }xsm } <$fh>;
    close $fh or croak "Cannot read file: $!";

    my @policies_from_module = map { my $pol = $_; chomp $pol; $pol =~ s{ ^ [[] }{}xsm;         $pol =~ s{ []]$ }{}xsm; $pol => 1; } grep { m{ ^ [[] }xsm } @policies_lines_from_module;
    my @policies_i_hate      = map { my $pol = $_; chomp $pol; $pol =~ s{ ^ [#] \s* [[] }{}xsm; $pol =~ s{ []]$ }{}xsm; $pol => 1; } grep { m{ ^ [#] }xsm } @policies_lines_from_module;

    # get installed policies

    # We assume that there is no /.perlcriticrc
    chdir q{/} or croak "Cannot change directory: $!";
    my $policies = capture_stdout { system 'perlcritic', '--list' };

    my %policy_installed = map { my $line = $_; $line =~ s{ ^ [0-9]+ \s+ }{}xsm; $line =~ s{ \s+ .* }{}xsm; $line => $_ } split /\n/xsm, $policies;

    for my $policy (@policies_from_module) {
        delete $policy_installed{$policy};
    }

    for my $policy (@policies_i_hate) {
        delete $policy_installed{$policy};
    }

    # report installed but not used policies
    for my $policy ( sort keys %policy_installed ) {
        print "$policy_installed{$policy}\n";
    }

    exit 0;
}

# vim: ts=4 sts=4 sw=4 et: syntax=perl
